rule objc
  command =  clang -MD -MF ${out}.d ${defines} ${include_dirs} ${framework_dirs} ${cflags} ${cflags_objc} -c ${in} -o ${out}
  description = compile ${in}
  depfile = ${out}.d
  deps = gcc
rule solink
  command = clang++ -shared ${ldflags} -Wl,--start-group @${out}.rsp ${frameworks} ${solibs} -Wl,--end-group ${libs} -Wl,-soname,${target_output_name}${output_extension} -o ${out}
  description = link ${out}
  rspfile = ${out}.rsp
  rspfile_content = ${in}
rule cxx
  command =  clang++ -MD -MF ${out}.d ${defines} ${include_dirs} ${cflags} ${cflags_cc} -c ${in} -o ${out}
  description = compile ${in}
  depfile = ${out}.d
  deps = gcc
rule cc
  command =  clang -MD -MF ${out}.d ${defines} ${include_dirs} ${cflags} ${cflags_c} -c ${in} -o ${out}
  description = compile ${in}
  depfile = ${out}.d
  deps = gcc
rule objcxx
  command =  clang++ -MD -MF ${out}.d ${defines} ${include_dirs} ${framework_dirs} ${cflags} ${cflags_objcc} -c ${in} -o ${out}
  description = compile ${in}
  depfile = ${out}.d
  deps = gcc
rule stamp
  command = touch ${out}
  description = stamp ${out}
rule copy_bundle_data
  command = python3 "/home/sanju/PROJECTS/GOOGLE/skia/gn/cp.py" ${in} ${out}
  description = copy_bundle_data ${in} ${out}
rule link
  command = clang++ ${ldflags} -Wl,--start-group @${root_out_dir}/${target_output_name}${output_extension}.rsp ${frameworks} ${solibs} -Wl,--end-group ${libs} -o ${root_out_dir}/${target_output_name}${output_extension}
  description = link ${out}
  rspfile = ${root_out_dir}/${target_output_name}${output_extension}.rsp
  rspfile_content = ${in}
rule asm
  command =  clang -MD -MF ${out}.d ${defines} ${include_dirs} ${asmflags} -c ${in} -o ${out}
  description = assemble ${in}
  depfile = ${out}.d
  deps = gcc
rule compile_xcassets
  command = true
  description = compile_xcassets ${out}
rule alink
  command =  python3 "/home/sanju/PROJECTS/GOOGLE/skia/gn/rm.py" "${out}" && ar rcs ${out} @${out}.rsp
  description = link ${out}
  rspfile = ${out}.rsp
  rspfile_content = ${in}
rule copy
  command = python3 "/home/sanju/PROJECTS/GOOGLE/skia/gn/cp.py" ${in} ${out}
  description = copy ${in} ${out}

subninja obj/android_utils.ninja
subninja obj/avif.ninja
subninja obj/avx.ninja
build obj/compile_sksl_glsl_nosettings_tests.stamp: stamp
build obj/compile_sksl_glsl_tests.stamp: stamp
build obj/compile_sksl_hlsl_tests.stamp: stamp
build obj/compile_sksl_metal_tests.stamp: stamp
build obj/compile_sksl_skrp_tests.stamp: stamp
build obj/compile_sksl_spirv_tests.stamp: stamp
build obj/compile_sksl_wgsl_tests.stamp: stamp
build obj/experimental.stamp: stamp ./libsktext.a
subninja obj/fontmgr_FontConfigInterface.ninja
subninja obj/fontmgr_FontConfigInterface_factory.ninja
subninja obj/fontmgr_android.ninja
subninja obj/fontmgr_android_factory.ninja
subninja obj/fontmgr_custom.ninja
subninja obj/fontmgr_custom_directory.ninja
subninja obj/fontmgr_custom_directory_factory.ninja
subninja obj/fontmgr_custom_embedded.ninja
subninja obj/fontmgr_custom_embedded_factory.ninja
subninja obj/fontmgr_custom_empty.ninja
subninja obj/fontmgr_custom_empty_factory.ninja
subninja obj/fontmgr_empty_factory.ninja
build obj/fontmgr_factory.stamp: stamp obj/fontmgr_fontconfig_factory.stamp
subninja obj/fontmgr_fontconfig.ninja
subninja obj/fontmgr_fontconfig_factory.ninja
subninja obj/fontmgr_fuchsia.ninja
subninja obj/fontmgr_mac_ct.ninja
subninja obj/fontmgr_mac_ct_factory.ninja
subninja obj/fontmgr_mac_ct_tests.ninja
subninja obj/fontmgr_win.ninja
subninja obj/fontmgr_win_factory.ninja
subninja obj/fontmgr_win_gdi.ninja
subninja obj/gpu.ninja
subninja obj/gpu_shared.ninja
subninja obj/graphite.ninja
subninja obj/heif.ninja
subninja obj/hsw.ninja
subninja obj/jpeg_decode.ninja
subninja obj/jpeg_encode.ninja
subninja obj/jpeg_mpf.ninja
subninja obj/jpegxl_decode.ninja
build obj/minify_sksl.stamp: stamp
build obj/minify_sksl_tests.stamp: stamp
build obj/modules.stamp: stamp ./libbentleyottmann.a ./libskottie.a ./libskparagraph.a ./libskshaper.a ./libsvg.a
subninja obj/ndk_images.ninja
subninja obj/pathkit.ninja
subninja obj/pdf.ninja
subninja obj/png_decode.ninja
subninja obj/png_encode.ninja
subninja obj/raw.ninja
build obj/run_sksllex.stamp: stamp
subninja obj/skia.ninja
subninja obj/ssse3.ninja
subninja obj/typeface_fontations.ninja
subninja obj/typeface_freetype.ninja
subninja obj/vello.ninja
subninja obj/webp_decode.ninja
subninja obj/webp_encode.ninja
subninja obj/wuffs.ninja
subninja obj/xml.ninja
subninja obj/xps.ninja
build obj/experimental/ffmpeg/video_decoder.stamp: stamp
build obj/experimental/ffmpeg/video_encoder.stamp: stamp
subninja obj/experimental/sktext/sktext.ninja
subninja obj/modules/bentleyottmann/bentleyottmann.ninja
subninja obj/modules/skcms/skcms.ninja
subninja obj/modules/skottie/skottie.ninja
subninja obj/modules/skottie/utils.ninja
subninja obj/modules/skparagraph/skparagraph.ninja
subninja obj/modules/skresources/skresources.ninja
subninja obj/modules/sksg/sksg.ninja
subninja obj/modules/skshaper/skshaper.ninja
subninja obj/modules/skunicode/skunicode.ninja
subninja obj/modules/svg/svg.ninja
build obj/third_party/fontconfig.stamp: stamp
subninja obj/third_party/dng_sdk/dng_sdk.ninja
build obj/third_party/expat/expat.stamp: stamp
build obj/third_party/freetype2/freetype2.stamp: stamp
build obj/third_party/harfbuzz/harfbuzz.stamp: stamp
build obj/third_party/icu/icu.stamp: stamp
build obj/third_party/libjpeg-turbo/libjpeg.stamp: stamp
build obj/third_party/libpng/libpng.stamp: stamp
build obj/third_party/libwebp/libwebp.stamp: stamp
subninja obj/third_party/piex/piex.ninja
subninja obj/third_party/wuffs/wuffs.ninja
subninja obj/third_party/zlib/compression_utils_portable.ninja
build obj/third_party/zlib/zlib.stamp: stamp
